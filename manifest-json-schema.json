{
  "title": "otp-runner manifest.json",
  "description": "A manifest for helping run OpenTripPlanner.",
  "properties": {
    "baseFolder": {
      "type": "string",
      "description": "The base directory for storing files. If `otpVersion` is set to `1.x`, then an additional folder inside the base folder will be written with the name found in the manifest value `routerName` and that additional folder will be where files are stored (for example `/var/otp/graphs/default`). If `otpVersion` is set to 2.x, then this folder itself will be used for storing files.",
      "default": "/var/otp/graphs"
    },
    "baseFolderDownloads": {
      "type": "array",
      "description": "An array of items that should be downloaded to the base folder (see description in `baseFolder` for what this folder will be). This can includes items such as GTFS files, OSM data, build-config.json, router-config.json or elevation files. Each item must be an object. Each item must have the `uri` property which must be either an HTTP(S) URL or AWS S3 URI. Each item can optionally have a `name` property which will be the name that the file will be given when it is downloaded. If `name` is omitted, then the filename will be whatever is after the final forward slash in the `uri` field.",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the file that should be saved in the base downloads folder."
          },
          "uri": {
            "type": "string",
            "description": "Either a HTTP(S) URL or AWS S3 URI."
          }
        },
        "required": [
          "uri"
        ]
      }
    },
    "buildConfigJSON": {
      "type": "string",
      "description": "The raw contents to write to the build-config.json file."
    },
    "buildGraph": {
      "type": "boolean",
      "description": "If true, run OpenTripPlanner in build mode. If this flag and the `runServer` flag are both false, an error will occur.",
      "default": true
    },
    "buildLogFile": {
      "type": "string",
      "description": "The path where the build logs should be written to.",
      "default": "/var/log/otp-build.log"
    },
    "graphObjUri": {
      "type": "string",
      "description": "Either an HTTP(S) URL or AWS S3 URI where the Graph.obj should be downloaded from for server-only runs. If `buildGraph` is set to false and `runServer` is set to true, this value must be defined. If `uploadGraph` is set to true, this value must be an AWS S3 URI that can be uploaded to."
    },
    "jarFile": {
      "type": "string",
      "description": "The full path to the OTP jar file.",
      "default": "/opt/otp-1.4.0-shaded.jar"
    },
    "jarUri": {
      "type": "string",
      "description": "Either an HTTP(S) URL or AWS S3 URI where the OTP jar can be downloaded from.",
      "default": "https://repo1.maven.org/maven2/org/opentripplanner/otp/1.4.0/otp-1.4.0-shaded.jar"
    },
    "nonce": {
      "type": "string",
      "description": "A value that will be written in status.json files in order to verify that the status file was produced by a particular run with the provided config."
    },
    "otpRunnerLogFile": {
      "type": "string",
      "description": "The path where the otp-runner logs should be written to.",
      "default": "/var/log/otp-runner.log"
    },
    "otpVersion": {
      "enum": ["1.x", "2.x"],
      "default": "1.x",
      "description": "The major version of OTP that is being used. Must be either `1.x` or `2.x`. This is used in order to generate the appropriate command line parameters to run OTP with."
    },
    "peliasCsv": {
      "type": "array",
      "description": "An array of URLs pointing to CSV files the Pelias instance should download and import.",
      "items": {"type": "string", "description": "Either a HTTP(S) URL or AWS S3 URI."},
      "default": []
    },
    "prefixLogUploadsWithInstanceId": {
      "type": "boolean",
      "description": "If true, will obtain the ec2 instance ID and prefix the otp-runner and otp-server log files with this instance ID when uploading to AWS S3.",
      "default": false
    },
    "routerConfigJSON": {
      "type": "string",
      "description": "The raw contents to write to the router-config.json file."
    },
    "routerName": {
      "type": "string",
      "description": "The name of the OTP router.",
      "default": "default"
    },
    "runServer": {
      "type": "boolean",
      "description": "If true, run OTP as a server.  If this flag and the `buildGraph` flag are both false, an error will occur.",
      "default": true
    },
    "s3UploadPath": {
      "type": "string",
      "description": "The base AWS S3 URI of where files will be uploaded to. Ex: `s3://bucket-name/folder`"
    },
    "serverLogFile": {
      "type": "string",
      "description": "The file location to write server logs to.",
      "default": "/var/log/otp-server.log"
    },
    "serverStartupTimeoutSeconds": {
      "type": "number",
      "description": "The amount of time to wait for a successful server startup (server initialization and graph read) before failing.",
      "default": 300
    },
    "statusFileLocation": {
      "type": "string",
      "description": "The file location to write status updates about this script to.",
      "default": "status.json"
    },
    "uploadGraphBuildLogs": {
      "type": "boolean",
      "description": "If true, the logs from a graph build will be uploaded to the provided AWS S3 bucket to the path `${s3UploadPath}/otp-build.log`. Note: if this is set to true, `s3UploadPath` must be defined.",
      "default": false
    },
    "uploadGraphBuildReport": {
      "type": "boolean",
      "description": "If true, the OTP-generated graph build report will be zipped up and uploaded to the provided AWS S3 bucket to the path `${s3UploadPath}/graph-build-report.zip`. Note: if this is set to true, `s3UploadPath` must be defined.",
      "default": false
    },
    "uploadGraph": {
      "type": "boolean",
      "description": "If true, the Graph.obj file will be uploaded after graph build. Note: if this is set to true, `graphObjUri` must be defined and be a valid AWS S3 URI.",
      "default": false
    },
    "uploadOtpRunnerLogs": {
      "type": "boolean",
      "description": "If true, the logs from the otp-runner script will be uploaded to the provided AWS S3 bucket to the path `${s3UploadPath}/otp-runner.log`. Note: if this is set to true, `s3UploadPath` must be defined.",
      "default": false
    },
    "uploadServerStartupLogs": {
      "type": "boolean",
      "description": "If true, the logs from the server startup will be uploaded to the provided AWS S3 bucket to the path `${s3UploadPath}/otp-server.log`. Note: if this is set to true, `s3UploadPath` must be defined.",
      "default": false
    }
  }
}
